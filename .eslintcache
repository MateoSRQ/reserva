[{"D:\\dev\\reserva\\src\\index.tsx":"1","D:\\dev\\reserva\\src\\elements\\intro\\element.tsx":"2","D:\\dev\\reserva\\src\\reportWebVitals.ts":"3","D:\\dev\\reserva\\src\\App.tsx":"4","D:\\dev\\reserva\\src\\elements\\form\\registro.js":"5","D:\\dev\\reserva\\src\\elements\\form\\pdf.js":"6","D:\\dev\\reserva\\src\\elements\\form2\\registro.js":"7","D:\\dev\\reserva\\src\\elements\\reclamo\\index.tsx":"8"},{"size":503,"mtime":1609952758365,"results":"9","hashOfConfig":"10"},{"size":22003,"mtime":1611609952960,"results":"11","hashOfConfig":"10"},{"size":425,"mtime":1608773852000,"results":"12","hashOfConfig":"10"},{"size":510,"mtime":1609883557732,"results":"13","hashOfConfig":"10"},{"size":10930,"mtime":1611013677243,"results":"14","hashOfConfig":"10"},{"size":3926,"mtime":1609905303958,"results":"15","hashOfConfig":"10"},{"size":11333,"mtime":1610922450599,"results":"16","hashOfConfig":"10"},{"size":11857,"mtime":1611583240380,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a71brt",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dev\\reserva\\src\\index.tsx",[],"D:\\dev\\reserva\\src\\elements\\intro\\element.tsx",["37"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Divider,\n  Select,\n  Image,\n  Checkbox,\n  Modal,\n  DatePicker,\n} from \"antd\";\nimport { PlusOutlined, MinusCircleOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nimport \"antd/dist/antd.css\";\nimport styles from \"./element.module.css\";\nimport { Typography } from \"antd\";\nimport distritos from \"../../data/distritos.json\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport \"moment/locale/es\";\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport { format, parse } from \"date-fns\";\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nexport default function Element() {\n  const [form] = Form.useForm();\n  const [sedes, setSedes] = useState<any | null>(null);\n  const [sede, setSede] = useState<any | null>(null);\n  const [events, setEvents] = useState<any | null>(null);\n  const [event, setEvent] = useState<any | null>(null);\n  const [dates, setDates] = useState<any | null>(null);\n  const [date, setDate] = useState<any | null>(null);\n  const [hours, setHours] = useState<any | null>(null);\n  const [hour, setHour] = useState<any | null>(null);\n  const [quota, setQuota] = useState<any>(1);\n\n  const [modalOk, setModalOk] = useState<boolean>(false);\n  const [modalNok, setModalNok] = useState<boolean>(false);\n  const [modalWarning, setModalWarning] = useState<boolean>(false);\n\n  const [checkbox1, setCheckbox1] = useState<boolean>(false);\n  const [checkbox2, setCheckbox2] = useState<boolean>(false);\n  const [checkbox3, setCheckbox3] = useState<boolean>(false);\n  const [checkbox4, setCheckbox4] = useState<boolean>(false);\n\n  useEffect(() => {\n    console.log(\"START\");\n    async function loadSedes() {\n      console.log(\"loadsedes\");\n      let data = await axios.get(\n        process.env.REACT_APP_ENDPOINT + \"/places/places\"\n      );\n      let resdata = _.uniq(_.map(data.data, \"place\"));\n      let sedes_options = resdata.map((option: any) => {\n        return <Option value={option}>{option}</Option>;\n      });\n      setSedes(sedes_options);\n    }\n    loadSedes();\n  }, []);\n\n  const handleChangeSede = async (value: any) => {\n    let data = await axios.get(\n      process.env.REACT_APP_ENDPOINT +\n        `/places/places?place=${value}&quota=${quota}`\n    );\n    let resdata = _.uniq(_.map(data.data, \"name\"));\n    let event_options = resdata.map((option: any) => {\n      return <Option value={option}>{option}</Option>;\n    });\n    setEvent(null);\n    setDate(null);\n    form.setFieldsValue({ event_id: null });\n    setDates(null);\n    setHours(null);\n    setSede(value);\n    setEvents(event_options);\n  };\n\n  const handleChangeEvent = async (value: any) => {\n    let data = await axios.get(\n      process.env.REACT_APP_ENDPOINT +\n        `/places/places?place=${sede}&name=${value}&quota=${quota}`\n    );\n    let resdata = _.uniq(_.map(data.data, \"date\"));\n    let date_options = resdata.map((option: any) => {\n      let x = format(parse(option, \"yyyy-mm-dd\", new Date()), \"dd/mm/yyyy\");\n      return <Option value={option}>{x}</Option>;\n    });\n    setEvent(value);\n    setDate(null);\n    form.setFieldsValue({ event_id: null });\n    setDates(date_options);\n  };\n\n  const handleChangeDate = async (value: any) => {\n    console.log(value);\n    let data = await axios.get(\n      process.env.REACT_APP_ENDPOINT +\n        `/places/places?place=${sede}&name=${event}&date=${value}&quota=${quota}`\n    );\n    //let resdata = _.uniq(_.map(data.data, \"hours\"));\n    let hour_options = data.data.map((option: any) => {\n      return (\n        <Option value={option.id}>\n          {option.hourBegin} - {option.hourEnd}\n        </Option>\n      );\n    });\n    setDate(value);\n    form.setFieldsValue({ event_id: null });\n    setHours(hour_options);\n  };\n\n  const onFinish = async (values: any) => {\n    console.log(\"Success:\", values);\n    if (!checkbox4) {\n      setModalWarning(true);\n    } else {\n      let response = await axios.post(\n        process.env.REACT_APP_ENDPOINT + `/reservas`,\n        values\n      );\n      if (response.data === \"already there\") {\n        setModalNok(true);\n      } else {\n        setModalOk(true);\n      }\n      console.log(response.data);\n    }\n  };\n\n  const onValuesChange = (values: any) => {\n    //console.log(\"Change:\", values);\n    //console.log(form.getFieldsError());\\\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const checkboxChange1 = (value: any) => {\n    setCheckbox1(value.target.checked);\n  };\n\n  const checkboxChange2 = (value: any) => {\n    setCheckbox2(value.target.checked);\n  };\n\n  const checkboxChange3 = (value: any) => {\n    setCheckbox3(value.target.checked);\n  };\n\n  const checkboxChange4 = (value: any) => {\n    setCheckbox4(value.target.checked);\n  };\n\n  const options = distritos.data.map((option: any) => {\n    return <Option value={option}>{option}</Option>;\n  });\n\n  return (\n    <div className={styles.element}>\n      <div className={styles.form}>\n        <div style={{ marginLeft: \"calc(50% - 130px)\", marginBottom: \"20px\" }}>\n          <Image width=\"260px\" src={`./logo.png`} />\n        </div>\n        <Title style={{ textAlign: \"center\", color: \"#06356d\" }} level={2}>\n          Solicitud de Reserva y Declaraci√≥n de Conformidad\n        </Title>\n        <Title\n          style={{\n            textAlign: \"center\",\n            color: \"#454545\",\n            marginTop: \"-15px\",\n            textTransform: \"uppercase\",\n            letterSpacing: \"0.4px\",\n          }}\n          level={4}\n        >\n          Proyecto Legado Juegos Panamericanos\n        </Title>\n\n        <Divider type=\"horizontal\" style={{ borderColor: \"#2f60be44\" }} />\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onValuesChange={onValuesChange}\n        >\n          <Title\n            style={{\n              textAlign: \"center\",\n              color: \"#454545\",\n              marginTop: \"-15px\",\n              textTransform: \"uppercase\",\n              letterSpacing: \"0.7px\",\n            }}\n            level={4}\n          >\n            DATOS GENERALES\n          </Title>\n          <Form.Item\n            label=\"Ingrese su nombre completo\"\n            name=\"nombres\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su nombre completo!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su apellido paterno\"\n            name=\"apellido_paterno\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su apellido paterno!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su apellido materno\"\n            name=\"apellido_materno\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su apellido materno!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Seleccione el tipo de documento\"\n            name=\"tipodoc\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, seleccione un tipo de documento!\",\n              },\n            ]}\n          >\n            <Select size=\"large\" showSearch>\n              <Option value=\"dni\">DNI</Option>\n              <Option value=\"pasaporte\">Pasaporte</Option>\n              <Option value=\"carne\">Carn√© de extranjer√≠a</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su n√∫mero de documento de identidad\"\n            name=\"nrodocumento\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese el n√∫mero de su documento\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Seleccione su sexo\"\n            name=\"sexo\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, seleccione un sexo!\",\n              },\n            ]}\n          >\n            <Select size=\"large\" showSearch>\n              <Option value=\"masculino\">Masculino</Option>\n              <Option value=\"femenino\">Femenino</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su fecha de nacimiento\"\n            name=\"nac\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su fecha de nacimiento!\",\n              },\n            ]}\n          >\n            <DatePicker\n              style={{ width: \"100%\" }}\n              locale={locale}\n              format={\"DD/MM/YYYY\"}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su direcci√≥n\"\n            name=\"direccion\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su direcci√≥n!\",\n              },\n            ]}\n          >\n            <TextArea rows={3} />\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su distrito de residencia\"\n            name=\"distrito\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su distrito de residencia!\",\n              },\n            ]}\n          >\n            <Select size=\"large\" showSearch>\n              {options}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su correo electr√≥nico\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su correo electr√≥nico!\",\n              },\n              {\n                type: \"email\",\n                message: \"Por favor,ingrese un correo electr√≥nico v√°lido!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Ingrese su n√∫mero de tel√©fono\"\n            name=\"phone\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, ingrese su tel√©fono!\",\n              },\n              {\n                pattern: new RegExp(\"[0-9]{7,12}\"),\n                //pattern: new RegExp(\"([a-zA-Z]{3,30}\\\\s*)+\"),\n                message: \"Por favor, ingrese un n√∫mero de tel√©fono v√°lido!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Divider type=\"horizontal\" style={{ borderColor: \"#2f60be44\" }} />\n          <Title\n            style={{\n              textAlign: \"center\",\n              color: \"#454545\",\n              marginTop: \"-15px\",\n              textTransform: \"uppercase\",\n              letterSpacing: \"0.4px\",\n            }}\n            level={4}\n          >\n            DATOS DE ACOMPA√ëANTES\n          </Title>\n\n          <Form.List name=\"grupo\">\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field, index) => (\n                  <div\n                    style={{\n                      border: \"1px solid #eaeaea\",\n                      padding: \"10px\",\n                      marginBottom: \"10px\",\n                    }}\n                  >\n                    <Title\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#454545\",\n                        textTransform: \"uppercase\",\n                        letterSpacing: \"0.4px\",\n                      }}\n                      level={5}\n                    >\n                      Acompa√±ante # {index + 1}\n                    </Title>\n                    <Form.Item\n                      label=\"Ingrese el nombre completo\"\n                      name={[field.name, \"nombres\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Por favor, ingrese su nombre completo!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item\n                      label=\"Ingrese el apellido paterno\"\n                      name={[field.name, \"apellido_paterno\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Por favor, ingrese su apellido paterno!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item\n                      label=\"Ingrese el apellido materno\"\n                      name={[field.name, \"apellido_materno\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Por favor, ingrese su apellido materno!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item\n                      label=\"Ingrese el n√∫mero de documento de identidad\"\n                      name={[field.name, \"nrodocumento\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message:\n                            \"Por favor, ingrese el n√∫mero de su documento\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item\n                      label=\"Seleccione sexo\"\n                      name={[field.name, \"sexo\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Por favor, seleccione un sexo!\",\n                        },\n                      ]}\n                    >\n                      <Select size=\"large\" showSearch>\n                        <Option value=\"masculino\">Masculino</Option>\n                        <Option value=\"femenino\">Femenino</Option>\n                      </Select>\n                    </Form.Item>\n                    <Form.Item\n                      label=\"Ingrese la fecha de nacimiento\"\n                      name={[field.name, \"nac\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Por favor, ingrese su fecha de nacimiento!\",\n                        },\n                      ]}\n                    >\n                      <DatePicker\n                        style={{ width: \"100%\" }}\n                        locale={locale}\n                        format={\"DD/MM/YYYY\"}\n                      />\n                    </Form.Item>\n                    <Form.Item label=\" \">\n                      <Button\n                        size=\"large\"\n                        onClick={() => {\n                          remove(field.name);\n                          setQuota(quota - 1);\n                        }}\n                        block\n                        icon={<MinusCircleOutlined />}\n                      >\n                        Eliminar\n                      </Button>\n                    </Form.Item>\n                  </div>\n                ))}\n                <Form.Item\n                  extra={\n                    <p style={{ fontStyle: \"italic\" }}>\n                      Ingrese los datos de los menores de edad que ser√°n parte\n                      del grupo. Los miembros del grupo mayores de edad deber√°n\n                      llenar su reserva independientemente.\n                    </p>\n                  }\n                >\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={() => {\n                      add();\n                      setQuota(quota + 1);\n                    }}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Agregar personas\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Divider type=\"horizontal\" style={{ borderColor: \"#2f60be44\" }} />\n          <Title\n            style={{\n              textAlign: \"center\",\n              color: \"#454545\",\n              marginTop: \"-15px\",\n              textTransform: \"uppercase\",\n              letterSpacing: \"0.4px\",\n            }}\n            level={4}\n          >\n            DATOS DE RESERVA\n          </Title>\n          <Form.Item label=\"Sede\">\n            <Select size=\"large\" onChange={handleChangeSede} value={sede}>\n              {sedes}\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"Actividad\">\n            <Select size=\"large\" onChange={handleChangeEvent} value={event}>\n              {events}\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"Fecha\">\n            <Select size=\"large\" onChange={handleChangeDate} value={date}>\n              {dates}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Horario\"\n            name=\"event_id\"\n            rules={[\n              {\n                required: true,\n                message: \"Por favor, seleccione un horario!\",\n              },\n            ]}\n          >\n            <Select size=\"large\" value={hour}>\n              {hours}\n            </Select>\n          </Form.Item>\n\n          <Divider type=\"horizontal\" style={{ borderColor: \"#2f60be44\" }} />\n          <Title\n            style={{\n              textAlign: \"center\",\n              color: \"#454545\",\n              marginTop: \"-15px\",\n              textTransform: \"uppercase\",\n              letterSpacing: \"0.4px\",\n            }}\n            level={4}\n          >\n            ACEPTACI√ìN Y CONFORMIDAD\n          </Title>\n          <Form.Item name=\"acepto\">\n            <Checkbox\n              checked={checkbox1}\n              style={{ lineHeight: \"32px\" }}\n              onChange={checkboxChange1}\n            >\n              Acepto los t√©rminos y condiciones para el acceso a las\n              instalaciones del Proyecto Legado de los Juegos Panamericanos Lima\n              2019.\n            </Checkbox>\n          </Form.Item>\n          <Form.Item name=\"acepto\">\n            <Checkbox\n              checked={checkbox2}\n              style={{ lineHeight: \"32px\" }}\n              onChange={checkboxChange2}\n            >\n              De conformidad con la Ley N¬∞ 29733, Ley de Protecci√≥n de Datos\n              Personales, doy mi consentimiento para el tratamiento de mis datos\n              personales registrados, para que sean utilizados y/o tratados por\n              el Proyecto Legado o a trav√©s de terceros, estricta y √∫nicamente\n              para fines relacionados a las actividades del Proyecto. Sus datos\n              podr√°n ser incorporados en un banco de datos personales de\n              titularidad de Proyecto Legado. Usted podr√° ejercer sus derechos\n              de informaci√≥n, acceso, rectificaci√≥n, cancelaci√≥n y oposici√≥n de\n              sus datos personales, en cualquier momento.\n            </Checkbox>\n          </Form.Item>\n          <Form.Item name=\"acepto\">\n            <Checkbox\n              checked={checkbox3}\n              style={{ lineHeight: \"32px\" }}\n              onChange={checkboxChange3}\n            >\n              Acepto recibir noticias e informaci√≥n sobre eventos culturales,\n              deportivos y otros relacionados al Proyecto Legado, de parte del\n              Proyecto Legado, sus organizadores y patrocinadores.\n            </Checkbox>\n          </Form.Item>\n          <Form.Item name=\"ddjj\">\n            <Checkbox\n              checked={checkbox4}\n              style={{ lineHeight: \"32px\" }}\n              onChange={checkboxChange4}\n            >\n              Declaro que no tengo ninguno de los siguientes s√≠ntomas\n              relacionados a COVID-19: Fiebre, Dolor de cabeza, Tos,\n              Irritabilidad, Congesti√≥n nasal, Diarrea, Dificultad para\n              respirar, Falta de percepci√≥n de olor, Falta de percepci√≥n de\n              sabor, y que los datos consignados aqu√≠ son verdaderos, con\n              calidad de declaraci√≥n jurada\n            </Checkbox>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n              block\n              disabled={!(checkbox1 && checkbox2 && checkbox3)}\n            >\n              Enviar\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n      <Modal\n        title=\"Confirmaci√≥n\"\n        centered\n        visible={modalOk}\n        footer={null}\n        closable={false}\n      >\n        <p>\n          En breve le llegar√° un mensaje de confirmaci√≥n a su correo\n          electr√≥nico. ¬°Lo esperamos! Recuerde llevar su DNI y el de sus\n          acompa√±antes para el ingreso a la Sede.\n        </p>\n      </Modal>\n      <Modal\n        title=\"Denegaci√≥n\"\n        centered\n        visible={modalNok}\n        footer={null}\n        closable={false}\n      >\n        <p>\n          Usted ya ha registrado una reserva recientemente. Programe una reserva\n          en dias posteriores.\n        </p>\n      </Modal>\n      <Modal\n        title=\"Alerta\"\n        centered\n        visible={modalWarning}\n        onOk={() => setModalWarning(false)}\n      >\n        <p>\n          Si ud. presenta alg√∫n s√≠ntoma relacionado al COVID-19, no podr√°\n          ingresar a las sedes. Por favor, cont√°ctese con el centro de salud m√°s\n          cercano para recibir asistencia.\n        </p>\n      </Modal>\n    </div>\n  );\n}\n","D:\\dev\\reserva\\src\\reportWebVitals.ts",[],"D:\\dev\\reserva\\src\\App.tsx",["38","39","40"],"D:\\dev\\reserva\\src\\elements\\form\\registro.js",["41","42","43","44","45","46","47","48","49","50"],"D:\\dev\\reserva\\src\\elements\\form\\pdf.js",["51"],"import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  Font,\n} from \"@react-pdf/renderer\";\nimport moment from \"moment\";\n\n// Create styles\n\n// Create Document Component\nexport default function MyDocument(data) {\n  console.log(\"pdf\");\n  console.log(data);\n  let sintomas = [];\n  let sintomastext = \"\";\n  if (data.data.sintomaFiebre) {\n    sintomas.push(\"fiebre\");\n  }\n  if (data.data.sintomaDolorCabeza) {\n    sintomas.push(\"dolor de cabeza\");\n  }\n  if (data.data.sintomaTos) {\n    sintomas.push(\"tos\");\n  }\n  if (data.data.sintomaIrritabilidad) {\n    sintomas.push(\"irritabilidad\");\n  }\n  if (data.data.sintomaCongestion) {\n    sintomas.push(\"congesti√≥n\");\n  }\n  if (data.data.sintomaDiarrea) {\n    sintomas.push(\"diarrea\");\n  }\n  if (data.data.sintomaRespiracion) {\n    sintomas.push(\"problemas de respiraci√≥n\");\n  }\n  if (data.data.sintomaOlor) {\n    sintomas.push(\"p√©rdida del sentido de olfato\");\n  }\n  if (sintomas.length) {\n    sintomastext =\n      \"presento el o los siguientes s√≠ntomas: \" +\n      sintomas.join(\", \").replace(/, ([^,]*)$/, \" y $1\");\n  } else {\n    sintomastext = \" no presento ning√∫n s√≠ntoma relacionado al COVID-19\";\n  }\n\n  return (\n    <Document>\n      <Page style={styles.body}>\n        <Text style={styles.ntitle}>\n          Proyecto Especial Legado Juegos Panamericanos\n        </Text>\n        <Image style={styles.image} src=\"./logo.png\" />\n        <Text style={styles.date}>\n          Lima, {moment().locale(\"es\").format(\"LL\")}\n        </Text>\n        <Text style={styles.title}>Declaraci√≥n Jurada COVID 19</Text>\n        <Text style={styles.text}>\n          Yo, {data.data.nombres.trim()} {data.data.apellidos.trim()},\n          identificado con Documento de identidad N¬∞ {data.data.nroDoc.trim()},\n          declaro bajo juramento que <Text>{sintomastext}</Text>.\n        </Text>\n        <Text style={styles.line}>\n          __________________________________________________\n        </Text>\n        <Text style={styles.spawn}>\n          {data.data.nombres.trim()} {data.data.apellidos.trim()}\n        </Text>\n        <Text style={styles.nheader}>Documento N¬∞ {data.data.nroDoc}</Text>\n        <Text style={styles.pageNumber} fixed>\n          Presentar este documento firmado al personal de control de acceso\n        </Text>\n      </Page>\n    </Document>\n  );\n}\n\nFont.register({\n  family: \"Oswald\",\n  src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n});\n\nFont.register({\n  family: \"NotoSans\",\n  src: \"./fonts/NotoSans/subset-NotoSans.ttf\",\n});\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 18,\n    textAlign: \"center\",\n    marginBottom: 15,\n  },\n  ntitle: {\n    fontSize: 11,\n    textAlign: \"center\",\n    family: \"NotoSans\",\n    fontWeight: \"bold\",\n    marginBottom: 15,\n    marginTop: -10,\n  },\n  spawn: {\n    fontSize: 14,\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n  line: {\n    marginTop: 100,\n    textAlign: \"center\",\n    fontSize: 10,\n    marginBottom: 5,\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 40,\n    fontFamily: \"NotoSans\",\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n    fontFamily: \"Oswald\",\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    marginTop: 0,\n    textAlign: \"justify\",\n    fontFamily: \"NotoSans\",\n    marginBottom: 10,\n  },\n  image: {\n    marginLeft: \"35%\",\n    width: 10,\n    marginBottom: 50,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  nheader: {\n    fontSize: 10,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  date: {\n    fontSize: 10,\n    marginBottom: 60,\n    textAlign: \"left\",\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n});\n","D:\\dev\\reserva\\src\\elements\\form2\\registro.js",["52","53","54","55","56","57","58","59","60","61"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  Form,\n  Image,\n  Input,\n  notification,\n  Typography,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport style from \"./app.module.css\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport axios from \"axios\";\nimport styles from \"./registro.module.css\";\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\n//import ReactPDF, { PDFDownloadLink } from \"@react-pdf/renderer\";\n\n//import PDF from \"./pdf\";\nconst { Title, Paragraph, Text } = Typography;\nconst ids = [\"1\"];\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [buttonText, setButtonText] = useState(\"Enviar formulario\");\n  const [saved, setSaved] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const handleChange = (key, value) => {\n    console.log(\"handleChange\");\n    console.log(\"key: \" + key + \" value: \" + value);\n    let _data = Object.assign({}, data);\n    if (value.isString) {\n      value = value.trim();\n    }\n    _data[key] = value;\n\n    console.log(\"xxx\");\n    console.log(_data[\"sintomaFiebre\"]);\n\n    if (key === \"sintomaNo\" && value === true) {\n      _data[\"sintomaFiebre\"] = false;\n      _data[\"sintomaTos\"] = false;\n      _data[\"sintomaDolorCabeza\"] = false;\n      _data[\"sintomaIrritabilidad\"] = false;\n      _data[\"sintomaIrritabilidad\"] = false;\n      _data[\"sintomaCongestion\"] = false;\n      _data[\"sintomaDiarrea\"] = false;\n      _data[\"sintomaRespiracion\"] = false;\n      data[\"sintomaOlor\"] = false;\n      data[\"sintomaSabor\"] = false;\n    }\n\n    if (\n      _data[\"sintomaFiebre\"] ||\n      _data[\"sintomaTos\"] ||\n      _data[\"sintomaDolorCabeza\"] ||\n      _data[\"sintomaIrritabilidad\"] ||\n      _data[\"sintomaIrritabilidad\"] ||\n      _data[\"sintomaCongestion\"] ||\n      _data[\"sintomaDiarrea\"] ||\n      _data[\"sintomaRespiracion\"] ||\n      data[\"sintomaOlor\"] ||\n      data[\"sintomaSabor\"]\n    ) {\n      _data[\"sintomaNo\"] = false;\n      setButtonText(\"Enviar reporte a Proyecto Legado\");\n      notification.warning({\n        message: \"Alerta\",\n        description:\n          \"Si ud. presenta un s√≠ntoma, no podr√° ingresar a las instalaciones\",\n        duration: 2,\n      });\n    } else {\n      setButtonText(\"Enviar formulario\");\n    }\n\n    if (\n      _data.nombres !== null &&\n      _data.nombres !== \"\" &&\n      _data.nombres !== undefined &&\n      _data.apellidos !== null &&\n      _data.apellidos !== \"\" &&\n      _data.apellidos !== undefined &&\n      _data.nro_doc !== null &&\n      _data.nro_doc !== \"\" &&\n      _data.nro_doc !== undefined &&\n      _data.celular !== null &&\n      _data.celular !== \"\" &&\n      _data.celular !== undefined &&\n      _data.ddjj === true\n    ) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n    console.log(_data);\n    setData(_data);\n    console.log(data);\n  };\n  const sendData = async () => {\n    let { ddjj, ..._data } = data;\n\n    _data.apto = buttonText === \"Enviar formulario\" ? 1 : 0;\n    for (let d in _data) {\n      if (_data[d] === true) _data[d] = \"T\";\n      if (_data[d] === false) _data[d] = \"F\";\n    }\n    console.log(_data);\n    try {\n      let r = await axios({\n        method: \"post\",\n        url: process.env.REACT_APP_ENDPOINT + \"/cuestionarioempleado\",\n        data: _data,\n      });\n      setSaved(true);\n      notification.success({\n        message: \"OK\",\n        description: \"Su cuestionario ha sido llenado satisfactoriamente\",\n        duration: 0,\n      });\n    } catch (e) {\n      console.log(e);\n      notification.error({\n        message: \"Error\",\n        description: \"El registro no ha podido ser guardado.\",\n        duration: 0,\n      });\n    }\n  };\n\n  let handleBlur = async () => {\n    console.log(\"blur\");\n    try {\n      let x = await axios({\n        method: \"get\",\n        url:\n          'http://127.0.0.1:3000/cuestionarios?filter={\"where\":{\"nro_doc\":{\"eq\":' +\n          data.nro_doc +\n          \"}}}\",\n      });\n      x = x.data;\n      console.log(x);\n      if (x && x[0]) {\n        setData({\n          nro_doc: x[0].nro_doc,\n          nombres: x[0].nombres,\n          apellidos: x[0].apellidos,\n          celular: x[0].celular,\n          // empresa: x[0].empresa,\n          // area: x[0].area,\n          // puesto: x[0].puesto,\n        });\n      }\n    } catch (e) {}\n  };\n\n  let link = null;\n  //\n  // if (saved) {\n  //   // link = (\n  //   //   <PDFDownloadLink document={<PDF data={data} />} fileName=\"somename.pdf\">\n  //   //     {({ blob, url, loading, error }) =>\n  //   //       loading ? \"Cargando documento...\" : \"Descargar archivo PDF\"\n  //   //     }\n  //   //   </PDFDownloadLink>\n  //   // );\n  //   link = null;\n  // }\n\n  let view = (\n    <div className=\"App\">\n      <Card\n        className={style.column}\n        title=\"FICHA DE S√çNTOMAS COVID-19\"\n        bordered={true}\n      >\n        <div style={{ marginBottom: \"20px\" }}>\n          <Image width=\"260px\" src={`./logo.png`} />\n        </div>\n        <Form id=\"form\" layout=\"vertical\">\n          <div className={style.date}>\n            {moment().locale(\"es\").format(\"LLLL\")}\n          </div>\n          <Title level={4}>Datos Generales</Title>\n          <Divider />\n          <Form.Item label=\"Documento de Identidad\">\n            <Input\n              value={data.nro_doc}\n              placeholder=\"Ingrese su documento de identidad\"\n              onChange={(e) => handleChange(\"nro_doc\", e.currentTarget.value)}\n              onBlur={handleBlur}\n            />\n          </Form.Item>\n          <Form.Item label=\"Nombres\">\n            <Input\n              value={data.nombres}\n              placeholder=\"Ingrese sus nombres completos\"\n              onChange={(e) => handleChange(\"nombres\", e.currentTarget.value)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Apellidos\">\n            <Input\n              value={data.apellidos}\n              placeholder=\"Ingrese sus apellidos\"\n              onChange={(e) => handleChange(\"apellidos\", e.currentTarget.value)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Celular\">\n            <Input\n              value={data.celular}\n              placeholder=\"Celular\"\n              onChange={(e) => handleChange(\"celular\", e.currentTarget.value)}\n            />\n          </Form.Item>\n          {/*<Form.Item label=\"Empresa\">*/}\n          {/*  <Input*/}\n          {/*    value={data.empresa}*/}\n          {/*    placeholder=\"Empresa\"*/}\n          {/*    onChange={(e) => handleChange(\"empresa\", e.currentTarget.value)}*/}\n          {/*  />*/}\n          {/*</Form.Item>*/}\n          {/*<Form.Item label=\"√Årea de trabajo\">*/}\n          {/*  <Input*/}\n          {/*    value={data.area}*/}\n          {/*    placeholder=\"√Årea de trabajo\"*/}\n          {/*    onChange={(e) => handleChange(\"area\", e.currentTarget.value)}*/}\n          {/*  />*/}\n          {/*</Form.Item>*/}\n          {/*<Form.Item label=\"Puesto de trabajo\">*/}\n          {/*  <Input*/}\n          {/*    value={data.puesto}*/}\n          {/*    placeholder=\"Puesto de trabajo\"*/}\n          {/*    onChange={(e) => handleChange(\"puesto\", e.currentTarget.value)}*/}\n          {/*  />*/}\n          {/*</Form.Item>*/}\n          <Divider />\n          <Title level={4}>\n            Marque en caso de tener los siguientes malestares\n          </Title>\n          <Form.Item>\n            <div>\n              <Checkbox\n                checked={data.sintomaFiebre}\n                onChange={(e) =>\n                  handleChange(\"sintomaFiebre\", e.target.checked)\n                }\n              >\n                Fiebre\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaDolorCabeza}\n                onChange={(e) =>\n                  handleChange(\"sintomaDolorCabeza\", e.target.checked)\n                }\n              >\n                Dolor de cabeza\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaTos}\n                onChange={(e) => handleChange(\"sintomaTos\", e.target.checked)}\n              >\n                Tos\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaIrritabilidad}\n                checked={data.sintomaIrritabilidad}\n                onChange={(e) =>\n                  handleChange(\"sintomaIrritabilidad\", e.target.checked)\n                }\n              >\n                Irritabilidad\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaCongestion}\n                onChange={(e) =>\n                  handleChange(\"sintomaCongestion\", e.target.checked)\n                }\n              >\n                Congesti√≤n nasal\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaDiarrea}\n                onChange={(e) =>\n                  handleChange(\"sintomaDiarrea\", e.target.checked)\n                }\n              >\n                Diarrea\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaRespiracion}\n                onChange={(e) =>\n                  handleChange(\"sintomaRespiracion\", e.target.checked)\n                }\n              >\n                Dificultad para respirar\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaOlor}\n                onChange={(e) => handleChange(\"sintomaOlor\", e.target.checked)}\n              >\n                No percibo olores\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaSabor}\n                onChange={(e) => handleChange(\"sintomaSabor\", e.target.checked)}\n              >\n                No percibo sabores\n              </Checkbox>\n            </div>\n            <div>\n              <Checkbox\n                checked={data.sintomaNo}\n                onChange={(e) => handleChange(\"sintomaNo\", e.target.checked)}\n              >\n                No tengo ninguno de los s√≠ntomas descritos\n              </Checkbox>\n            </div>\n          </Form.Item>\n          <Divider />\n          {/*<Title level={4}>Medici√≥n de temperatura</Title>*/}\n          {/*<Form.Item style={{width: '90%', marginLeft: '5%'}}>*/}\n          {/*  <Slider range marks={marks} defaultValue={[36]} min={35} max={40} step={.1}/>*/}\n          {/*</Form.Item>*/}\n          {/*<Divider/>*/}\n          <Form.Item>\n            <Checkbox\n              onChange={(e) => handleChange(\"ddjj\", e.target.checked)}\n              style={{ textAlign: \"left\" }}\n            >\n              Declaro que los datos consignados aqu√≠ son verdaderos, con calidad\n              de declaraci√≥n jurada.\n            </Checkbox>\n          </Form.Item>\n          <Divider />\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              block\n              onClick={sendData}\n              disabled={buttonDisabled}\n            >\n              {buttonText}\n            </Button>\n          </Form.Item>\n        </Form>\n        {/*{link}*/}\n      </Card>\n    </div>\n  );\n  return view;\n}\n\nexport default App;\n","D:\\dev\\reserva\\src\\elements\\reclamo\\index.tsx",["62","63","64","65","66","67","68","69","70","71","72","73"],{"ruleId":"74","severity":1,"message":"75","line":38,"column":16,"nodeType":"76","messageId":"77","endLine":38,"endColumn":23},{"ruleId":"74","severity":1,"message":"78","line":6,"column":3,"nodeType":"76","messageId":"77","endLine":6,"endColumn":7},{"ruleId":"74","severity":1,"message":"79","line":7,"column":3,"nodeType":"76","messageId":"77","endLine":7,"endColumn":16},{"ruleId":"74","severity":1,"message":"80","line":8,"column":3,"nodeType":"76","messageId":"77","endLine":8,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":18,"column":8,"nodeType":"76","messageId":"77","endLine":18,"endColumn":14},{"ruleId":"81","severity":1,"message":"83","line":19,"column":27,"nodeType":"76","messageId":"77","endLine":19,"endColumn":33},{"ruleId":"81","severity":1,"message":"84","line":19,"column":35,"nodeType":"76","messageId":"77","endLine":19,"endColumn":43},{"ruleId":"81","severity":1,"message":"85","line":23,"column":16,"nodeType":"76","messageId":"77","endLine":23,"endColumn":25},{"ruleId":"81","severity":1,"message":"86","line":23,"column":27,"nodeType":"76","messageId":"77","endLine":23,"endColumn":31},{"ruleId":"81","severity":1,"message":"87","line":24,"column":7,"nodeType":"76","messageId":"77","endLine":24,"endColumn":10},{"ruleId":"81","severity":1,"message":"88","line":28,"column":10,"nodeType":"76","messageId":"77","endLine":28,"endColumn":15},{"ruleId":"81","severity":1,"message":"89","line":105,"column":11,"nodeType":"76","messageId":"77","endLine":105,"endColumn":12},{"ruleId":"81","severity":1,"message":"90","line":152,"column":7,"nodeType":"76","messageId":"77","endLine":152,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":264,"column":17,"nodeType":"93","endLine":264,"endColumn":52},{"ruleId":"81","severity":1,"message":"94","line":5,"column":3,"nodeType":"76","messageId":"77","endLine":5,"endColumn":7},{"ruleId":"81","severity":1,"message":"82","line":19,"column":8,"nodeType":"76","messageId":"77","endLine":19,"endColumn":14},{"ruleId":"81","severity":1,"message":"83","line":20,"column":27,"nodeType":"76","messageId":"77","endLine":20,"endColumn":33},{"ruleId":"81","severity":1,"message":"84","line":20,"column":35,"nodeType":"76","messageId":"77","endLine":20,"endColumn":43},{"ruleId":"81","severity":1,"message":"85","line":24,"column":16,"nodeType":"76","messageId":"77","endLine":24,"endColumn":25},{"ruleId":"81","severity":1,"message":"86","line":24,"column":27,"nodeType":"76","messageId":"77","endLine":24,"endColumn":31},{"ruleId":"81","severity":1,"message":"87","line":25,"column":7,"nodeType":"76","messageId":"77","endLine":25,"endColumn":10},{"ruleId":"81","severity":1,"message":"88","line":30,"column":10,"nodeType":"76","messageId":"77","endLine":30,"endColumn":15},{"ruleId":"81","severity":1,"message":"89","line":114,"column":11,"nodeType":"76","messageId":"77","endLine":114,"endColumn":12},{"ruleId":"81","severity":1,"message":"90","line":161,"column":7,"nodeType":"76","messageId":"77","endLine":161,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":276,"column":17,"nodeType":"93","endLine":276,"endColumn":52},{"ruleId":"74","severity":1,"message":"95","line":2,"column":18,"nodeType":"76","messageId":"77","endLine":2,"endColumn":23},{"ruleId":"74","severity":1,"message":"96","line":2,"column":39,"nodeType":"76","messageId":"77","endLine":2,"endColumn":42},{"ruleId":"74","severity":1,"message":"97","line":4,"column":23,"nodeType":"76","messageId":"77","endLine":4,"endColumn":28},{"ruleId":"74","severity":1,"message":"98","line":5,"column":30,"nodeType":"76","messageId":"77","endLine":5,"endColumn":38},{"ruleId":"74","severity":1,"message":"99","line":9,"column":18,"nodeType":"76","messageId":"77","endLine":9,"endColumn":25},{"ruleId":"74","severity":1,"message":"100","line":12,"column":10,"nodeType":"76","messageId":"77","endLine":12,"endColumn":21},{"ruleId":"74","severity":1,"message":"101","line":13,"column":10,"nodeType":"76","messageId":"77","endLine":13,"endColumn":16},{"ruleId":"74","severity":1,"message":"102","line":16,"column":9,"nodeType":"76","messageId":"77","endLine":16,"endColumn":15},{"ruleId":"74","severity":1,"message":"103","line":16,"column":17,"nodeType":"76","messageId":"77","endLine":16,"endColumn":23},{"ruleId":"74","severity":1,"message":"104","line":16,"column":25,"nodeType":"76","messageId":"77","endLine":16,"endColumn":32},{"ruleId":"74","severity":1,"message":"105","line":24,"column":10,"nodeType":"76","messageId":"77","endLine":24,"endColumn":14},{"ruleId":"74","severity":1,"message":"106","line":24,"column":16,"nodeType":"76","messageId":"77","endLine":24,"endColumn":23},"@typescript-eslint/no-unused-vars","'setHour' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","no-unused-vars","'styles' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","'Paragraph' is assigned a value but never used.","'Text' is assigned a value but never used.","'ids' is assigned a value but never used.","'saved' is assigned a value but never used.","'r' is assigned a value but never used.","'link' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'View' is defined but never used.","'Space' is defined but never used.","'Col' is defined but never used.","'Radio' is defined but never used.","'Checkbox' is defined but never used.","'message' is defined but never used.","'IconContext' is defined but never used.","'MdApps' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Content' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used."]